<Window xmlns="https://github.com/avaloniaui" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity" 
    xmlns:behaviors="clr-namespace:SatPlaceClient.Behaviors;assembly=SatPlaceClient" 
    xmlns:converters="clr-namespace:SatPlaceClient.Converters;assembly=SatPlaceClient" 
    xmlns:vm="clr-namespace:SatPlaceClient.ViewModels;assembly=SatPlaceClient" 
    xmlns:local="clr-namespace:SatPlaceClient.Controls;assembly=SatPlaceClient" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:paz="clr-namespace:Avalonia.Controls.PanAndZoom;assembly=Avalonia.Controls.PanAndZoom" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450" x:Class="SatPlaceClient.Views.MainWindow" Icon="/Assets/avalonia-logo.ico" UseLayoutRounding="True" FontFamily="/Assets/Fonts/*.ttf#Open Sans" Title="SatPlaceClient">
    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>
    <Window.Styles>
        <Style Selector="TextBlock.FadedMetroHeader">
            <Setter Property="Opacity" Value="0.1"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="40,-20"/>
            <Setter Property="FontSize" Value="120"/>
            <Setter Property="FontWeight" Value="Light"/>
        </Style>
        <Style Selector="Button.ToolbarButtons">
            <Setter Property="Height" Value="28"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style Selector="TextBlock.OrderDetailBulletHeader">
            <Setter Property="Grid.Column" Value="0"/>
            <Setter Property="Grid.ColumnSpan" Value="1"/>
            <Setter Property="TextAlignment" Value="Right"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style Selector="TextBlock.OrderDetailBulletItem">
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="Grid.ColumnSpan" Value="1"/>
        </Style>
        <Style Selector="TextBox.OrderInvoiceBox">
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>           
        </Style>
        <Style Selector="TextBox.OrderInvoiceBox:pointerover">
            <Setter Property="BorderBrush" Value="Transparent"/>
        </Style>
        <Style Selector="Button.MetroButton TextBlock">
            <Setter Property="Margin" Value="6"/>
        </Style>
        <Style Selector="Button.MetroButton">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style Selector=":is(Control).MarginS">
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style Selector=":is(Control).MarginM">
            <Setter Property="Margin" Value="15"/>
        </Style>
        <Style Selector=":is(Control).MarginL">
            <Setter Property="Margin" Value="30"/>
        </Style>
        <Style Selector=":is(Control).TextS1">
            <Setter Property="TextBlock.FontSize" Value="10"/>
        </Style>
        <Style Selector=":is(Control).TextS2">
            <Setter Property="TextBlock.FontSize" Value="15"/>
        </Style>
        <Style Selector=":is(Control).TextM1">
            <Setter Property="TextBlock.FontSize" Value="24"/>
        </Style>
        <Style Selector=":is(Control).TextM2">
            <Setter Property="TextBlock.FontSize" Value="50"/>
        </Style>
        <Style Selector=":is(Control).TextL1">
            <Setter Property="TextBlock.FontSize" Value="90"/>
        </Style>
        <Style Selector=":is(Control).TextL2">
            <Setter Property="TextBlock.FontSize" Value="110"/>
        </Style>
    </Window.Styles>
    <Window.Resources>
        <converters:BooleanColorizerConverter x:Key="BooleanColorizerConverter" />
        <converters:NullToBooleanConverter x:Key="NullToBooleanConverter" />
        <converters:BooleanToTextConverter x:Key="BooleanToTextConverter" />
        <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <converters:PixelArrayToAvaloniaBitmapConverter x:Key="PixelArrayToAvaloniaBitmapConverter" />
        <converters:PixelArrayToImageBrushConverter x:Key="PixelArrayToImageBrushConverter" />

        
    </Window.Resources>
    <Grid>
        <Grid RowDefinitions="*,Auto">
            <Grid RowDefinitions="Auto,*">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Spacing="10" Grid.Row="0" Margin="5">
                    <Border BorderBrush="Gray" BorderThickness="1" Background="Black" Width="28" Height="28" Margin="10" ToolTip.Tip="{Binding ConnectionReady, ConverterParameter=Connected:Disconnected, Converter={StaticResource BooleanToTextConverter}}">
                        <Ellipse Fill="{Binding ConnectionReady, ConverterParameter=Crimson:Lime, Converter={StaticResource BooleanColorizerConverter}}" Width="22" Height="22" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <Button Content="Reconnect" Command="{Binding ReconnectCommand}" IsVisible="{Binding EnableReconnection}" Classes="ToolbarButtons"/>
                    <Button Content="Refresh" Command="{Binding RefreshCanvasCommand}" Classes="ToolbarButtons"/>
                    <Button Content="Add Image" IsEnabled="{Binding AddImageEnabled}" Classes="ToolbarButtons">
                        <i:Interaction.Behaviors>
                            <behaviors:OpenDialogSingleFileOutBehavior DialogTitle="Select image to upload (PNG)" TargetFilePath="{Binding TargetImageFilePath, Mode=TwoWay}" />
                        </i:Interaction.Behaviors>
                    </Button>
                    <Button Content="Remove Image" Command="{Binding RemoveImageCommand}" Classes="ToolbarButtons"/>
                    <Button Content="Center Align" Command="{Binding CenterAlignCommand}" Classes="ToolbarButtons"/>
                    <Button Content="Submit" Command="{Binding OrderCommand}" Classes="ToolbarButtons"/>
                </StackPanel>
                <paz:ZoomBorder RenderOptions.BitmapInterpolationMode="Default" Stretch="None" ZoomSpeed="1.2" Background="SlateBlue" ClipToBounds="True" Focusable="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Row="4" Grid.Column="1">
                    <i:Interaction.Behaviors>
                        <behaviors:PanAndZoomBehavior />
                    </i:Interaction.Behaviors>
                    <Border Width="1020" Height="1020" BorderBrush="Gray" BorderThickness="10" IsEnabled="{Binding LatestCanvasBitmap, ConverterParameter=Invert, Converter={StaticResource NullToBooleanConverter}}">
                        <Canvas Width="1000" Height="1000" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Image Canvas.Left="0" Canvas.Top="0" Source="{Binding LatestCanvasBitmap, Converter={StaticResource PixelArrayToAvaloniaBitmapConverter}}"/>
                            <Panel Background="{Binding TargetImage, Converter={StaticResource PixelArrayToImageBrushConverter}}" Canvas.Left="{Binding TargetImageX, Mode=TwoWay}" Canvas.Top="{Binding TargetImageY, Mode=TwoWay}" Width="{Binding TargetImageW}" Height="{Binding TargetImageH}">
                                <i:Interaction.Behaviors>
                                    <behaviors:CanvasDraggableBehavior />
                                </i:Interaction.Behaviors>
                                <Panel Background="White" IsVisible="{Binding PNGFileProcessingInProgress}" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Processing Image..."/>
                                </Panel>
                              
                            </Panel>
                        </Canvas>
                    </Border>
                </paz:ZoomBorder>
            </Grid>
            <StackPanel Orientation="Horizontal" Background="#FFCC00" Spacing="10" Grid.Row="1" IsVisible="{Binding ErrorMessage, ConverterParameter=Invert, Converter={StaticResource NullToBooleanConverter}}">
                <TextBlock Text="{Binding ErrorMessage}" FontWeight="Bold" Foreground="#E51400" Margin="5"/>
            </StackPanel>
        </Grid>

        <!-- Dialog overlay-->
        <Grid Background="#AA000000" RowDefinitions="0.6*,5*,0.6*" IsVisible="{Binding CurrentOrder, ConverterParameter=Invert, Converter={StaticResource NullToBooleanConverter}}">
            <Border Background="White" Grid.Row="1" Grid.RowSpan="1">
                <Grid>
                    <!-- Review Dialog -->
                    <Grid RowDefinitions="0.7*,2*,0.7*" IsVisible="{Binding CurrentOrderStatus, ConverterParameter=DetailReview, Converter={StaticResource EnumToBooleanConverter}}">
                        <TextBlock Classes="FadedMetroHeader" Text="Order Details" Grid.RowSpan="3"/>
                        <Grid ColumnDefinitions="2*,6*,2*" VerticalAlignment="Center" Grid.RowSpan="3">
                            <StackPanel Grid.Column="1" Grid.ColumnSpan="1">
                                <Grid ColumnDefinitions="*,*">
                                    <TextBlock Classes="OrderDetailBulletHeader MarginS TextM1" Text="Price per Pixel:"/>
                                    <TextBlock Classes="OrderDetailBulletItem MarginS TextM1" Text="{Binding OrderSettings.PricePerPixel, StringFormat=\{0\} sats}"/>
                                </Grid>
                                <Grid ColumnDefinitions="*,*">
                                    <TextBlock Classes="OrderDetailBulletHeader MarginS TextM1" Text="Image Size:"/>
                                    <TextBlock Classes="OrderDetailBulletItem MarginS TextM1" Text="{Binding CurrentOrder.DimensionString, StringFormat=\{0\} pixels}"/>
                                </Grid>
                                <Grid ColumnDefinitions="*,*">
                                    <TextBlock Classes="OrderDetailBulletHeader MarginS TextM1" Text="Total Pixels:"/>
                                    <TextBlock Classes="OrderDetailBulletItem MarginS TextM1" Text="{Binding CurrentOrder.TotalPixels, StringFormat=\{0\} pixels}"/>
                                </Grid>
                                <Grid ColumnDefinitions="*,*">
                                    <TextBlock Classes="OrderDetailBulletHeader MarginS TextM1" Text="Grand Total:"/>
                                    <TextBlock Classes="OrderDetailBulletItem MarginS TextM1" Text="{Binding CurrentOrder.GrandTotalSats, StringFormat=\{0\} sats}"/>
                                </Grid>
                            </StackPanel>
                        </Grid>
                        <Grid Grid.Row="2" Grid.RowSpan="1">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Classes="MarginL" Spacing="15">
                                <Button Classes="MetroButton TextS2" Content="Cancel" Command="{Binding CancelOrderCommand}" />
                                <Button Classes="MetroButton TextS2" Content="Finalize Order" Command="{Binding ReviewDialogFinalizeCommand}" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <!-- Uploading Dialog -->
                    <Grid RowDefinitions="0.7*,2*,0.7*" IsVisible="{Binding CurrentOrderStatus, ConverterParameter=Uploading, Converter={StaticResource EnumToBooleanConverter}}">
                        <TextBlock Classes="FadedMetroHeader" Text="Uploading..." Grid.RowSpan="3"/>
                        <Grid Grid.Row="2" Grid.RowSpan="1">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Classes="MarginL" Spacing="15">
                                <Button Classes="MetroButton TextS2" Content="Cancel" Command="{Binding CancelOrderCommand}" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <!-- Display Invoice Dialog -->
                    <Grid RowDefinitions="0.7*,2*,0.7*" IsVisible="{Binding CurrentOrderStatus, ConverterParameter=DisplayInvoice, Converter={StaticResource EnumToBooleanConverter}}">
                        <TextBlock Classes="FadedMetroHeader" Text="Awaiting Payment" Grid.RowSpan="3"/>
                        <Grid ColumnDefinitions="2*,6*,2*" VerticalAlignment="Center" Grid.RowSpan="3">
                            <StackPanel Grid.Column="1" Grid.ColumnSpan="1">
                                <Grid ColumnDefinitions="*,*">
                                    <local:QrCode Grid.ColumnSpan="1" Data="{Binding CurrentOrder.Invoice}" />
                                    <TextBox Grid.Column="1" Classes="OrderInvoiceBox MarginS TextS1" Text="{Binding CurrentOrder.Invoice}" />
                                </Grid>
                            </StackPanel>
                        </Grid>
                        <Grid Grid.Row="2" Grid.RowSpan="1">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Classes="MarginL" Spacing="15">
                                <Button Classes="MetroButton TextS2" Content="Cancel" Command="{Binding CancelOrderCommand}" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <!-- Payment Confirmed Dialog -->
                    <Grid RowDefinitions="0.7*,2*,0.7*" IsVisible="{Binding CurrentOrderStatus, ConverterParameter=Confirmed, Converter={StaticResource EnumToBooleanConverter}}">
                        <TextBlock Classes="FadedMetroHeader" Text="Payment Confirmed!" Grid.RowSpan="3"/>
                        <Grid ColumnDefinitions="2*,6*,2*" VerticalAlignment="Center" Grid.RowSpan="3">
                            <TextBlock Classes="MarginS TextM1" Text="Payment has been confirmed. Press the Finish button to exit this dialog." Grid.Column="1" Grid.ColumnSpan="1" />
                        </Grid>
                        <Grid Grid.Row="2" Grid.RowSpan="1">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Classes="MarginL" Spacing="15">
                                <Button Classes="MetroButton TextS2" Content="Finish" Command="{Binding CancelOrderCommand}" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
